name: Node.js CI

on:
  push:
    branches: [ develop ]

jobs:
  build:
    name: Build, UnitTest and IT
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
    
  # push:
  #   runs-on: ubuntu-latest
    
  #   strategy:
  #     matrix:
  #       node-version: [14.x]
    
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     - name: Set up Docker Buildx
  #       id: buildx
  #       uses: docker/setup-buildx-action@v1

  #     - name: Build and push
  #       id: docker_build
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: ./
  #         file: ./Dockerfile
  #         push: true
  #         tags: klurpicolodocker/nestjs-helloworld:${{ github.sha }}

  push_grc:
    name: Setup, Build, Publish and Deploy to Dev
    needs: build
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: keyspace-demo-cicd
      GCE_INSTANCE:  nestjs-cicd-example-project

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@master
      with:
        version: '290.0.1'
        service_account_key: ${{ secrets.GCE_SA_KEY }}
        project_id: ${{ secrets.GCE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker
    # Build the Docker image
    - name: Build
      run: |-
        docker build --tag "gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$GITHUB_SHA" .
    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$GITHUB_SHA"

    - name: Deploy
      run: |-
        gcloud compute instances update-container "nestjs-cicd-example-project2" \
          --zone "us-central1-a" \
          --container-image "gcr.io/keyspace-demo-cicd/nestjs-cicd-example-project-image:$GITHUB_SHA"

  api-test:
    name: API-test
    needs: push_grc
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Sleep for 180 seconds
    #This is work around for waiting for GCP to deploy and done
      uses: jakejarvis/wait-action@master
      with:
        time: '3m'

    - name: API-test
      uses: matt-ball/newman-action@master
      with:
        collection: ./postman/postman_collection.json
        environment: ./postman/DEV.postman_environment.json

